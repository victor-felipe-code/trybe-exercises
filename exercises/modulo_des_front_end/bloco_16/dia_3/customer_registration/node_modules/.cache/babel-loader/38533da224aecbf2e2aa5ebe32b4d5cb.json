{"ast":null,"code":"var _jsxFileName = \"/home/victor/trybe-exercises/exercises/modulo_des_front_end/bloco_16/dia_3/customer_registration/src/components/FormLogin/index.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport auth from '../../redux/actions/auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FormLogin extends React.Component {\n  render() {\n    const {\n      email,\n      password,\n      handleChange\n    } = this.props;\n    const user = {\n      email,\n      password\n    };\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => event.preventDefault(),\n      action: \"\",\n      className: \"form-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          value: email,\n          name: \"email\",\n          required: true,\n          type: \"email\",\n          className: \"input-email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          value: password,\n          name: \"password\",\n          required: true,\n          type: \"password\",\n          className: \"input-password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register-clients\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.props.auth(user),\n            className: \"btn-enter-login\",\n            type: \"button\",\n            children: \"Entrar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  auth: user => dispatch(auth(user))\n});\n\nFormLogin.propTypes = {\n  email: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  auth: PropTypes.func.isRequired\n};\nexport default connect(null, mapDispatchToProps)(FormLogin);","map":{"version":3,"sources":["/home/victor/trybe-exercises/exercises/modulo_des_front_end/bloco_16/dia_3/customer_registration/src/components/FormLogin/index.jsx"],"names":["React","connect","Link","PropTypes","auth","FormLogin","Component","render","email","password","handleChange","props","user","event","preventDefault","mapDispatchToProps","dispatch","propTypes","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;;;AAEA,MAAMC,SAAN,SAAwBL,KAAK,CAACM,SAA9B,CAAwC;AACtCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAAoC,KAAKC,KAA/C;AACA,UAAMC,IAAI,GAAG;AAAEJ,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAAb;AACA,wBACE;AACE,MAAA,QAAQ,EAAII,KAAD,IAAWA,KAAK,CAACC,cAAN,EADxB;AAEE,MAAA,MAAM,EAAC,EAFT;AAGE,MAAA,SAAS,EAAC,cAHZ;AAAA,8BAKE;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF,eASE;AAAA,+BACE;AACE,UAAA,QAAQ,EAAGJ,YADb;AAEE,UAAA,KAAK,EAAGF,KAFV;AAGE,UAAA,IAAI,EAAC,OAHP;AAIE,UAAA,QAAQ,MAJV;AAKE,UAAA,IAAI,EAAC,OALP;AAME,UAAA,SAAS,EAAC;AANZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cATF,eAoBE;AAAA,+BACE;AACE,UAAA,QAAQ,EAAGE,YADb;AAEE,UAAA,KAAK,EAAGD,QAFV;AAGE,UAAA,IAAI,EAAC,UAHP;AAIE,UAAA,QAAQ,MAJV;AAKE,UAAA,IAAI,EAAC,UALP;AAME,UAAA,SAAS,EAAC;AANZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cApBF,eA8BE;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,mBAAT;AAAA,iCACE;AACE,YAAA,OAAO,EAAG,MAAM,KAAKE,KAAL,CAAWP,IAAX,CAAgBQ,IAAhB,CADlB;AAEE,YAAA,SAAS,EAAC,iBAFZ;AAGE,YAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA9BF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA4CD;;AAhDqC;;AAmDxC,MAAMG,kBAAkB,GAAIC,QAAD,KAAe;AACxCZ,EAAAA,IAAI,EAAGQ,IAAD,IAAUI,QAAQ,CAACZ,IAAI,CAACQ,IAAD,CAAL;AADgB,CAAf,CAA3B;;AAIAP,SAAS,CAACY,SAAV,GAAsB;AACpBT,EAAAA,KAAK,EAAEL,SAAS,CAACe,MAAV,CAAiBC,UADJ;AAEpBV,EAAAA,QAAQ,EAAEN,SAAS,CAACe,MAAV,CAAiBC,UAFP;AAGpBT,EAAAA,YAAY,EAAEP,SAAS,CAACiB,IAAV,CAAeD,UAHT;AAIpBf,EAAAA,IAAI,EAAED,SAAS,CAACiB,IAAV,CAAeD;AAJD,CAAtB;AAOA,eAAelB,OAAO,CAAC,IAAD,EAAOc,kBAAP,CAAP,CAAkCV,SAAlC,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport auth from '../../redux/actions/auth';\n\nclass FormLogin extends React.Component {\n  render() {\n    const { email, password, handleChange } = this.props;\n    const user = { email, password };\n    return (\n      <form\n        onSubmit={ (event) => event.preventDefault() }\n        action=\"\"\n        className=\"form-content\"\n      >\n        <div>\n          <h1>Login</h1>\n        </div>\n\n        <div>\n          <input\n            onChange={ handleChange }\n            value={ email }\n            name=\"email\"\n            required\n            type=\"email\"\n            className=\"input-email\"\n          />\n        </div>\n\n        <div>\n          <input\n            onChange={ handleChange }\n            value={ password }\n            name=\"password\"\n            required\n            type=\"password\"\n            className=\"input-password\"\n          />\n        </div>\n        <div>\n          <Link to=\"/register-clients\">\n            <button\n              onClick={ () => this.props.auth(user) }\n              className=\"btn-enter-login\"\n              type=\"button\"\n            >\n              Entrar\n            </button>\n          </Link>\n        </div>\n      </form>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  auth: (user) => dispatch(auth(user)),\n});\n\nFormLogin.propTypes = {\n  email: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  auth: PropTypes.func.isRequired,\n};\n\nexport default connect(null, mapDispatchToProps)(FormLogin);\n"]},"metadata":{},"sourceType":"module"}