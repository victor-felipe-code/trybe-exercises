{"ast":null,"code":"var _jsxFileName = \"/home/victor/trybe-exercises/exercises/modulo_des_front_end/bloco_16/dia_3/customer_registration/src/components/FormRegister/index.jsx\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport register from '../../redux/actions/register';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass FormRegister extends React.Component {\n  render() {\n    const {\n      email,\n      name,\n      age,\n      handleChange\n    } = this.props;\n    const client = {\n      name,\n      age,\n      email\n    };\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      action: true,\n      onSubmit: event => event.preventDefault(),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Cadastro de cliente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          value: name,\n          placeholder: \"Nome do cliente\",\n          name: \"name\",\n          className: \"input-text\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          value: age,\n          placeholder: \"Idade do cliente\",\n          name: \"age\",\n          className: \"input-text\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: handleChange,\n          value: email,\n          placeholder: \"E-mail do cliente\",\n          name: \"email\",\n          className: \"input-email\",\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          children: \"Salvar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nFormRegister.propTypes = {\n  name: PropTypes.string.isRequired,\n  age: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired\n};\n\nconst mapDispatchToProps = dispatch => ({\n  register: client => dispatch(register(client))\n});\n\nexport default connect(null, mapDispatchToProps)(FormRegister);","map":{"version":3,"sources":["/home/victor/trybe-exercises/exercises/modulo_des_front_end/bloco_16/dia_3/customer_registration/src/components/FormRegister/index.jsx"],"names":["React","PropTypes","connect","register","FormRegister","Component","render","email","name","age","handleChange","props","client","event","preventDefault","propTypes","string","isRequired","func","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,QAAP,MAAqB,8BAArB;;;AAEA,MAAMC,YAAN,SAA2BJ,KAAK,CAACK,SAAjC,CAA2C;AACzCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA,KAAF;AAASC,MAAAA,IAAT;AAAeC,MAAAA,GAAf;AAAoBC,MAAAA;AAApB,QAAqC,KAAKC,KAAhD;AACA,UAAMC,MAAM,GAAG;AAAEJ,MAAAA,IAAF;AAAQC,MAAAA,GAAR;AAAaF,MAAAA;AAAb,KAAf;AACA,wBACE;AAAM,MAAA,MAAM,MAAZ;AAAa,MAAA,QAAQ,EAAIM,KAAD,IAAWA,KAAK,CAACC,cAAN,EAAnC;AAAA,8BACE;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,+BACE;AACE,UAAA,QAAQ,EAAGJ,YADb;AAEE,UAAA,KAAK,EAAGF,IAFV;AAGE,UAAA,WAAW,EAAC,iBAHd;AAIE,UAAA,IAAI,EAAC,MAJP;AAKE,UAAA,SAAS,EAAC,YALZ;AAME,UAAA,IAAI,EAAC;AANP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAcE;AAAA,+BACE;AACE,UAAA,QAAQ,EAAGE,YADb;AAEE,UAAA,KAAK,EAAGD,GAFV;AAGE,UAAA,WAAW,EAAC,kBAHd;AAIE,UAAA,IAAI,EAAC,KAJP;AAKE,UAAA,SAAS,EAAC,YALZ;AAME,UAAA,IAAI,EAAC;AANP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAdF,eAwBE;AAAA,+BACE;AACE,UAAA,QAAQ,EAAGC,YADb;AAEE,UAAA,KAAK,EAAGH,KAFV;AAGE,UAAA,WAAW,EAAC,mBAHd;AAIE,UAAA,IAAI,EAAC,OAJP;AAKE,UAAA,SAAS,EAAC,aALZ;AAME,UAAA,IAAI,EAAC;AANP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAxBF,eAkCE;AAAA,+BACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAlCF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAwCD;;AA5CwC;;AA+C3CH,YAAY,CAACW,SAAb,GAAyB;AACvBP,EAAAA,IAAI,EAAEP,SAAS,CAACe,MAAV,CAAiBC,UADA;AAEvBR,EAAAA,GAAG,EAAER,SAAS,CAACe,MAAV,CAAiBC,UAFC;AAGvBV,EAAAA,KAAK,EAAEN,SAAS,CAACe,MAAV,CAAiBC,UAHD;AAIvBP,EAAAA,YAAY,EAAET,SAAS,CAACiB,IAAV,CAAeD;AAJN,CAAzB;;AAOA,MAAME,kBAAkB,GAAIC,QAAD,KAAe;AACxCjB,EAAAA,QAAQ,EAAGS,MAAD,IAAYQ,QAAQ,CAACjB,QAAQ,CAACS,MAAD,CAAT;AADU,CAAf,CAA3B;;AAIA,eAAeV,OAAO,CAAC,IAAD,EAAOiB,kBAAP,CAAP,CAAkCf,YAAlC,CAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport register from '../../redux/actions/register';\n\nclass FormRegister extends React.Component {\n  render() {\n    const { email, name, age, handleChange } = this.props;\n    const client = { name, age, email };\n    return (\n      <form action onSubmit={ (event) => event.preventDefault() }>\n        <div>\n          <h1>Cadastro de cliente</h1>\n        </div>\n        <div>\n          <input\n            onChange={ handleChange }\n            value={ name }\n            placeholder=\"Nome do cliente\"\n            name=\"name\"\n            className=\"input-text\"\n            type=\"text\"\n          />\n        </div>\n        <div>\n          <input\n            onChange={ handleChange }\n            value={ age }\n            placeholder=\"Idade do cliente\"\n            name=\"age\"\n            className=\"input-text\"\n            type=\"text\"\n          />\n        </div>\n        <div>\n          <input\n            onChange={ handleChange }\n            value={ email }\n            placeholder=\"E-mail do cliente\"\n            name=\"email\"\n            className=\"input-email\"\n            type=\"text\"\n          />\n        </div>\n        <div>\n          <button type=\"button\">Salvar</button>\n        </div>\n      </form>\n    );\n  }\n}\n\nFormRegister.propTypes = {\n  name: PropTypes.string.isRequired,\n  age: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  register: (client) => dispatch(register(client)),\n});\n\nexport default connect(null, mapDispatchToProps)(FormRegister);\n"]},"metadata":{},"sourceType":"module"}